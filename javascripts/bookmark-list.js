// Generated by CoffeeScript 1.8.0
(function() {
  this.BookmarksList = (function() {
    function BookmarksList(bookmarks, options) {
      this.bookmarks = bookmarks;
      this.options = options != null ? options : {};
      this.delegate = this.options.delegate;
    }

    BookmarksList.prototype.render = function($viewport) {
      var bookmark, bookmarkItem, _i, _len, _ref;
      this.$viewport = $viewport;
      this.$el = document.createElement("ul");
      this.$el.className = "bookmarks-list clearfix";
      _ref = this.bookmarks;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        bookmark = _ref[_i];
        bookmarkItem = new BookmarkItem(bookmark);
        bookmarkItem.delegate = this;
        bookmarkItem.render(this.$el);
      }
      return this.$viewport.appendChild(this.$el);
    };

    BookmarksList.prototype.hidePopupIfPresent = function() {
      if (this.popup) {
        this.popup.hide();
        return this.popup = null;
      }
    };

    BookmarksList.prototype.openFolder = function(bookmarkItem) {
      var _ref;
      chrome.bookmarks.getChildren(bookmarkItem.bookmarkId, (function(_this) {
        return function(bookmarks) {
          _this.hidePopupIfPresent();
          _this.popup = new BookmarksPopup(bookmarks, {
            folderId: bookmarkItem.bookmarkId
          });
          return _this.popup.render(bookmarkItem.$link);
        };
      })(this));
      return (_ref = this.delegate) != null ? typeof _ref.BookmarksListDidOpenFolder === "function" ? _ref.BookmarksListDidOpenFolder(this) : void 0 : void 0;
    };

    BookmarksList.prototype.BookmarkItemDidClick = function(bookmarkItem) {
      if (bookmarkItem.isFolder()) {
        return this.openFolder(bookmarkItem);
      }
    };

    BookmarksList.prototype.BookmarkItemDidMouseOver = function(bookmarkItem) {
      var _ref;
      if (!bookmarkItem.isFolder()) {
        this.hidePopupIfPresent();
      }
      return (_ref = this.delegate) != null ? typeof _ref.BookmarksListDidMouseOverItem === "function" ? _ref.BookmarksListDidMouseOverItem(this, bookmarkItem) : void 0 : void 0;
    };

    BookmarksList.prototype.BookmarkItemWillClick = function(bookmarkItem) {
      return this.hidePopupIfPresent();
    };

    return BookmarksList;

  })();

}).call(this);
